<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>機械設計專題 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/2017.atom.xml" rel="self"></link><id>./</id><updated>2017-08-18T09:00:00+08:00</updated><entry><title>推送網誌教學</title><link href="./tui-song-wang-zhi-jiao-xue.html" rel="alternate"></link><published>2017-08-18T09:00:00+08:00</published><updated>2017-08-18T09:00:00+08:00</updated><author><name>40423152</name></author><id>tag:,2017-08-18:./tui-song-wang-zhi-jiao-xue.html</id><summary type="html">&lt;p&gt;在還不是協作者的情況下進行網誌推送&lt;/p&gt;


&lt;p&gt;首先到 Coursemdetw 的使用者頁面，找到 Project_site 以及 Project_site file 並執行 fork 來複製倉儲&lt;/p&gt;
&lt;p&gt;為何需要兩個倉儲?&lt;/p&gt;
&lt;p&gt;為了將網誌以及圖資分開管理&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/20170818/rep.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;fork 就有如複製一般&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/20170818/fork-mean.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;如何確認自己 fork 無誤呢?&lt;/p&gt;
&lt;p&gt;在自己倉儲區域下面有標註原出處&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/20170818/fork.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;如 fork 到錯誤的倉儲&lt;/p&gt;
&lt;p&gt;直接進入 setting 拉至最底下的 Danger Zone 來進行刪除即可&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/20170818/setting.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;Danger Zone &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/20170818/delete.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;確認好之後&lt;/p&gt;
&lt;p&gt;直接 clone 自己 fork 的倉儲即可&lt;/p&gt;
&lt;p&gt;因為你無權去修改出處的內容&lt;/p&gt;
&lt;p&gt;網誌撰寫完成之後進行推送&lt;/p&gt;
&lt;p&gt;步驟一樣是&lt;/p&gt;
&lt;pre class="brush: bash"&gt;
git add -A

git commit -m "XXXX"

git push
&lt;/pre&gt;

&lt;h3&gt;Pull request&lt;/h3&gt;

&lt;p&gt;並到倉儲上做 New pull request 要求原倉儲的管理員進行版本更新&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/20170818/but.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;按下 request 之後 請注意 base 以及 head 分別為哪邊的倉儲&lt;/p&gt;
&lt;p&gt;下面紅框處可以看到自己剛剛 commit 的名稱&lt;/p&gt;
&lt;p&gt;可以以這樣來確認自己有沒有搞錯目的地以及來源&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/20170818/pull.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;確認後按下 Creat pull request&lt;/p&gt;
&lt;p&gt;會進入到此頁面 並在紅框處留言(不能為空白)&lt;/p&gt;
&lt;p&gt;完成後按下 Create 即送出更新版本要求&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/20170818/request.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;如遇到下圖沒有可以選目的以及來源的狀況&lt;/p&gt;
&lt;p&gt;請點選 compare across forks (紅框處)&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/20170818/nothing.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/20170818/nothing1.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;並回到 Pull request 照著步驟進行&lt;/p&gt;</summary><category term="暑期學習"></category></entry><entry><title>Eric 環境安裝-Windows (下)</title><link href="./eric-huan-jing-an-zhuang-windows-xia.html" rel="alternate"></link><published>2017-08-17T09:00:00+08:00</published><updated>2017-08-17T09:00:00+08:00</updated><author><name>40423152</name></author><id>tag:,2017-08-17:./eric-huan-jing-an-zhuang-windows-xia.html</id><summary type="html">&lt;p&gt;介紹安裝方法-2&lt;/p&gt;


&lt;p&gt;下載完QT安裝客戶端之後&lt;/p&gt;
&lt;p&gt;雙擊開啟 進入安裝流程&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/QT-A.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;按下NEXT之後 登入帳號&lt;/p&gt;
&lt;p&gt;帳號可在Qt申請&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/QT-B.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/QT-C.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;選擇安裝位置並選擇需要安裝的項目&lt;/p&gt;
&lt;p&gt;預設最新版本與工具包即可&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/QT-D.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/QT-E.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;按下同意即可繼續安裝&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/QT-F.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;安裝過程 漫長的等待&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/QT-G.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;完成&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/QT-H.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;接下來打開命令提式字元&lt;/p&gt;
&lt;p&gt;先切換至C槽&lt;/p&gt;
&lt;pre class="brush: bash"&gt;
cd C:\
&lt;/pre&gt;

&lt;p&gt;接著使用pip進行安裝PyQt以及QScintilla&lt;/p&gt;
&lt;p&gt;兩個打在一起他會自動依序安裝&lt;/p&gt;
&lt;pre class="brush: bash"&gt;
pip install pyqt QScintilla
&lt;/pre&gt;

&lt;p&gt;若是電腦內原本就有安裝PyQt以及QScintilla&lt;/p&gt;
&lt;p&gt;使用-U(要大寫)來進行更新&lt;/p&gt;
&lt;pre class="brush: bash"&gt;
pip install pyqt QScintilla -U
&lt;/pre&gt;

&lt;p&gt;安裝完成後去Eric的官方網站下載Eric的檔案&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/ERIC-1.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/ERIC-2.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;下載完後進行解壓縮並將命令提示字元的位置轉移到其路徑&lt;/p&gt;
&lt;p&gt;以下用我這邊來說明&lt;/p&gt;
&lt;p&gt;由於我讓下載目錄預設在Downloads裡面故路徑為這樣&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/POS.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;pre class="brush: bash"&gt;
C:\Users\kmol\Downloads\eric6-17.08 (1)\eric6-17.08
&lt;/pre&gt;

&lt;p&gt;這樣就完成切換&lt;/p&gt;
&lt;p&gt;並且由於Eric的安裝檔為PY&lt;/p&gt;
&lt;p&gt;故必須用Python來進行安裝&lt;/p&gt;
&lt;pre class="brush: bash"&gt;
python install.py
&lt;/pre&gt;

&lt;p&gt;安裝完成後於命令提示字元輸入eric6即可開啟&lt;/p&gt;</summary><category term="暑期學習"></category></entry><entry><title>Linux作業系統下的程式開發環境</title><link href="./linuxzuo-ye-xi-tong-xia-de-cheng-shi-kai-fa-huan-jing.html" rel="alternate"></link><published>2017-08-15T09:00:00+08:00</published><updated>2017-08-15T09:00:00+08:00</updated><author><name>40423116</name></author><id>tag:,2017-08-15:./linuxzuo-ye-xi-tong-xia-de-cheng-shi-kai-fa-huan-jing.html</id><summary type="html">&lt;p&gt;參考&lt;a href="http://project.mde.tw/blog/yen-kmol-de-cheng-shi-kai-fa-huan-jing.html"&gt;yen - KMOL 的程式開發環境 &lt;/a&gt;學習如何安裝Qt5、sip、PyQt5、qscintilla2 與 eric6 等，並寫一篇文章回報&lt;/p&gt;


&lt;h2&gt;Ubuntu 16.04 虛擬主機安裝&lt;/h2&gt;

&lt;p&gt;下載&lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;VirtualBox&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下載&lt;a href="https://www.ubuntu.com/download/desktop"&gt;Ubuntu 16.04&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;開啟VirtualBox並新增虛擬機器&lt;/p&gt;

&lt;p&gt;&lt;img src="./users/4042/40423116/01.png" width="800" height="600" /&gt;
&lt;p&gt;載入ubuntu-16.04映像檔安裝ubuntu&lt;/p&gt;
&lt;p&gt;有幾個要注意的虛擬機器配置選樣:&lt;/p&gt;
&lt;p&gt;記憶體差不多1~4G就可以&lt;/p&gt;
&lt;p&gt;檔案位置與大小:位置看個人需求,比較需要注意的是大小，建議多一點，設超過20以上&lt;/p&gt;
&lt;h2&gt;開始安裝工具&lt;/h2&gt;
&lt;h3&gt;安裝, Solvespace 與程式庫開發所需的各種套件:&lt;/h3&gt;
&lt;pre class="brush: python"&gt;
apt-get install libpng-dev libjson-c-dev libfreetype6-dev \
                libfontconfig1-dev libgtkmm-2.4-dev libpangomm-1.4-dev \
                libcairo2-dev libgl-dev libglu-dev cmake swig \
                python3-dev python3-pip pyqt5-dev mingw-w64
&lt;/pre&gt;
&lt;p&gt;安裝 Pyslvs-PyQt5 所需要的 peewee ORM 模組, 以及產生靜態網誌所需的 pelican 與 Markdown:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
sudo pip3 install peewee pelican Markdown
&lt;/pre&gt;
&lt;h3&gt;安裝Qt5.7&lt;/h3&gt;
&lt;p&gt;確認 Qt 版次指令:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
qmake-v
&lt;/pre&gt;
&lt;p&gt;下載&lt;a href="http://download.qt.io/official_releases/qt/5.7/5.7.0/qt-opensource-linux-x64-5.7.0.run"&gt;http://download.qt.io/official_releases/qt/5.7/5.7.0/qt-opensource-linux-x64-5.7.0.run &lt;/a&gt;並安裝Qt5.7&lt;/p&gt;
&lt;p&gt;若雙擊安裝包未能執行程式,使用下列指令並安裝&lt;/p&gt;
&lt;pre class="brush: python"&gt;
sudo chmod +x      /可執行化
sudo ./qt-xxx.run   /執行qt
&lt;/pre&gt;
&lt;p&gt;利用 gedit ~/.bashrc, 編輯 .bashrc, 加入:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
export QTDIR=/opt/Qt5.7.0/5.7/gcc_64/ 
export LD_LIBRARY_PATH=&lt;span QTDIR="QTDIR" class="math"&gt;\({LD_LIBRARY_PATH}:\)&lt;/span&gt;/lib 
export PATH=&lt;span PATH="PATH" class="math"&gt;\({QTDIR}/bin:\)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;然後以 source ~/.bashrc 讓設定生效&lt;/p&gt;
&lt;h3&gt;安裝Sip&lt;/h3&gt;
&lt;p&gt;確認 Sip 版次指令:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
sip -V 
&lt;/pre&gt;
&lt;p&gt;首先,先移除Ubuntu 16.04 內建的 sip 4.17.1 舊版本:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
sudo apt purge python3-sip python3-sip-dev
&lt;/pre&gt;
&lt;p&gt;然後下載&lt;a href="http://www.riverbankcomputing.com/software/sip/download"&gt; http://www.riverbankcomputing.com/software/sip/download &lt;/a&gt;,安裝sip4.18.1&lt;/p&gt;
&lt;pre class="brush: python"&gt;
python3 configure.py 
make
sudo make install
&lt;/pre&gt;
&lt;p&gt;假如要確認 Python3 導入時使用的 sip 版本, 利用下列程式碼檢查:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
import sip
print(sip, sip.SIP_VERSION_STR)
&lt;/pre&gt;
&lt;h3&gt;安裝PyQt5&lt;/h3&gt;
&lt;p&gt;PyQt5 的安裝步驟與 sip 相同, 從&lt;a href="http://www.riverbankcomputing.com/software/pyqt/download5"&gt; http://www.riverbankcomputing.com/software/pyqt/download5 &lt;/a&gt;下載原始碼之後:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
python3 configure.py 
make
sudo make install
&lt;/pre&gt;
&lt;h3&gt;安裝qscintilla&lt;/h3&gt;
&lt;p&gt;首先下載原始碼&lt;a href="http://www.riverbankcomputing.com/software/qscintilla/download "&gt; http://www.riverbankcomputing.com/software/qscintilla/download  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下執行指令在3個目錄下(cd)&lt;/p&gt;
&lt;p&gt;1.Qt4Qt5&lt;/p&gt;
&lt;pre class="brush: python"&gt;
cd Qt4Qt5
qmake qscintilla.pro
make
sudo make install
&lt;/pre&gt;
&lt;p&gt;2.designer-Qt4Qt5&lt;/p&gt;
&lt;pre class="brush: python"&gt;
cd ../designer-Qt4Qt5
qmake designer.pro
make
sudo make install
&lt;/pre&gt;
&lt;p&gt;3.Python&lt;/p&gt;
&lt;pre class="brush: python"&gt;
cd ../Python
python3 configure.py --pyqt=PyQt5
make
sudo make install
&lt;/pre&gt;
&lt;h3&gt;安裝eric6&lt;/h3&gt;
&lt;p&gt;從 &lt;a href="http://eric-ide.python-projects.org/eric-download.html "&gt; http://eric-ide.python-projects.org/eric-download.html  &lt;/a&gt;下載原始碼後, 進行安裝&lt;/p&gt;
&lt;pre class="brush: python"&gt;
sudo python3 install.py
&lt;/pre&gt;
&lt;p&gt;在黑窗打入指令 eric6 即可開啟&lt;/p&gt;
&lt;h3&gt;安裝 Leo Editor&lt;/h3&gt;
&lt;p&gt;1.git clone Leo Editor 的原始碼,並將 leo 目錄複製到 /usr/local/lib/python3.5/dist-packages 目錄中即完成安裝,&lt;/p&gt;
&lt;p&gt;2.以 python3 launchLeo.py, 或者將 python3 launchLeo.py 放入可執行的 leo 檔案中來啟動Leo Editor&lt;/p&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="暑期學習"></category></entry><entry><title>Eric 環境安裝-Windows (上)</title><link href="./eric-huan-jing-an-zhuang-windows-shang.html" rel="alternate"></link><published>2017-08-12T09:00:00+08:00</published><updated>2017-08-12T09:00:00+08:00</updated><author><name>40423152</name></author><id>tag:,2017-08-12:./eric-huan-jing-an-zhuang-windows-shang.html</id><summary type="html">&lt;p&gt;介紹安裝方法-1&lt;/p&gt;


&lt;p&gt;這篇介紹應該幾天前就出來了&lt;/p&gt;
&lt;p&gt;不過由於我的筆記型電腦送修&lt;/p&gt;
&lt;p&gt;實驗室原本位置的windows主機不知為何會突然關機&lt;/p&gt;
&lt;p&gt;於是換成了同一位置的第二台主機&lt;/p&gt;
&lt;p&gt;它屬於Linux系統，於是想用虛擬機來介紹&lt;/p&gt;
&lt;p&gt;下載了64bit的WIN10的ISO檔案&lt;/p&gt;
&lt;p&gt;不料原先BIOS內VT-D為disable狀態，要去調整時又發現BIOS有密碼&lt;/p&gt;
&lt;p&gt;向詹老師詢問後終於開啟了VT-D，但還是只有32位元的虛擬機可以勾選&lt;/p&gt;
&lt;p&gt;最後換到了實驗室最後面的電腦來使用。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/P.png?raw=true" /&gt;&lt;/p&gt;
&lt;h3&gt;安裝過程&lt;/h3&gt;

&lt;p&gt;首先將Python 3.6.2安裝起來&lt;/p&gt;
&lt;p&gt;先去系統檢視電腦為哪一位元&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/SYS.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;之後去Python的官網&lt;/p&gt;
&lt;p&gt;選擇3.6.2(紅框處)&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/python.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;之後拉到下面選擇好位元之後下載executable(可執行)&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/python2.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;下載後打開來安裝&lt;/p&gt;
&lt;p&gt;由於此電腦本身有安裝過&lt;/p&gt;
&lt;p&gt;所以上面那欄為Upgrade&lt;/p&gt;
&lt;p&gt;如未安裝過 應該顯示為&lt;font color=#0000FF&gt;Install Now&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/PI.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;先點選Customize來確認勾選項目如圖一樣&lt;/p&gt;
&lt;p&gt;確認後按back然後按下install now&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/PI2.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;安裝好後開起命令提式字元來測試有沒有安裝成功&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/PY.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/PYTEST.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;安裝Qt&lt;/p&gt;
&lt;p&gt;進入官網&lt;/p&gt;
&lt;p&gt;點選紅框處&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/Qt.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;拉至頁面最下方點選紅框處&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/QT2.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;進入後拉至最下方，右邊為商業用，左邊為開放原始碼，並點選紅框處&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/Qt3.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;進入後DOWNLOAD NOW&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/4042/40423152/Qt4.PNG?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;今日內容以上
其餘內容下周補上&lt;/p&gt;</summary><category term="暑期學習"></category></entry><entry><title>Python basic "The Calculate" simple ver.</title><link href="./python-basic-the-calculate-simple-ver.html" rel="alternate"></link><published>2017-07-26T09:00:00+08:00</published><updated>2017-07-26T09:00:00+08:00</updated><author><name>40423152</name></author><id>tag:,2017-07-26:./python-basic-the-calculate-simple-ver.html</id><summary type="html">&lt;p&gt;寫好了精簡版本的計算機程式&lt;/p&gt;


&lt;p&gt;昨日的計算機程式今日改了介面並在學長的幫助下完成了&lt;/p&gt;
&lt;p&gt;啟動程式&lt;/p&gt;
&lt;pre class="brush: python"&gt;
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from cal import MainWindow

if __name__=='__main__':
    import sys
    app = QApplication(sys.argv)
    run = MainWindow()
    run.show()
    sys.exit(app.exec_())

&lt;/pre&gt;

&lt;p&gt;計算主要程式&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# -*- coding: utf-8 -*-
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from Ui_cal import Ui_MainWindow

class MainWindow(QMainWindow, Ui_MainWindow): 
    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent)
        self.setupUi(self)

    @pyqtSlot()
    def on_plusButton_clicked(self):
        A = self.doubleSpinBoxA.value()
        B = self.doubleSpinBoxB.value()
        self.listWidget.addItem(str(A+B))

    @pyqtSlot()
    def on_clearButton_clicked(self):
        for i in range(self.listWidget.count()):
            self.listWidget.takeItem(0)

    @pyqtSlot()
    def on_minusButton_clicked(self):
        A = self.doubleSpinBoxA.value()
        B = self.doubleSpinBoxB.value()
        self.listWidget.addItem(str(A-B))

    @pyqtSlot()
    def on_divButton_clicked(self):
        try:
            A = self.doubleSpinBoxA.value()
            B = self.doubleSpinBoxB.value()
            self.listWidget.addItem(str(A/B))
        except: self.listWidget.addItem("Error!!")

    @pyqtSlot()
    def on_crossButton_clicked(self):
        A = self.doubleSpinBoxA.value()
        B = self.doubleSpinBoxB.value()
        self.listWidget.addItem(str(A*B))

&lt;/pre&gt;

&lt;p&gt;經過詢問之後知道了&lt;font color=#0000FF&gt;self&lt;/font&gt;的用法&lt;/p&gt;
&lt;p&gt;是代表在&lt;font color=#5500DD&gt;Mainwindow&lt;/font&gt;視窗底下中的圖塊&lt;/p&gt;
&lt;p&gt;在完成後學長提出關於&lt;font color=#FF0000&gt;除零錯誤&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;我還想了一下並不是很懂為什麼會有bug&lt;/p&gt;
&lt;p&gt;原來是因為會得出無限大的答案&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/227038029" width="640" height="480" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/227038029"&gt;錄製_2017_07_26_17_05_10_483&lt;/a&gt; from &lt;a href="https://vimeo.com/user46451216"&gt;Willy Lai&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="暑期學習"></category></entry><entry><title>Python basic "The Calculate"</title><link href="./python-basic-the-calculate.html" rel="alternate"></link><published>2017-07-25T09:00:00+08:00</published><updated>2017-07-25T09:00:00+08:00</updated><author><name>40423152</name></author><id>tag:,2017-07-25:./python-basic-the-calculate.html</id><summary type="html">&lt;p&gt;在實驗室已重新灌window系統的電腦上安裝以及撰寫計算機程式&lt;/p&gt;


&lt;p&gt;有上次的經驗這次安裝過程快了很多&lt;/p&gt;
&lt;p&gt;不過實驗室的電腦所接收到的網路速度沒有破過200kB &lt;/p&gt;
&lt;p&gt;所以安裝Qt的過程是從昨天開始&lt;/p&gt;
&lt;p&gt;讓電腦在實驗室跑了一天&lt;/p&gt;
&lt;p&gt;今日安裝完成後&lt;/p&gt;
&lt;p&gt;學長有教學關於class的概念&lt;/p&gt;
&lt;pre class="brush: python"&gt;
class dog:
    def __init__(self):
        print("bark!")

    def walk(self, x):
        print("walk %d"%x)

class black_dog(dog):
    def __init__(self, a):
        print(a)

    def black_dog_walk(self, x):
        print("black dog walk %d"%x)

    def walk(self, x):
        super(black_dog, self).walk(x)
        self.black_dog_walk(x)

BD = black_dog(10)
BD.walk(5)
&lt;/pre&gt;

&lt;p&gt;以上列的狗狗與黑狗跑幾步來說明&lt;/p&gt;
&lt;p&gt;"繼承"程式的概念&lt;/p&gt;
&lt;p&gt;如中間段的&lt;font color=#0000FF&gt;class black_dog(dog):&lt;/font&gt;即是以黑色狗狗繼承一開始dog的函式&lt;/p&gt;
&lt;p&gt;但由於blackdog底下沒有執行dog函式中列印字串的功能 故bark不會被列印出來&lt;/p&gt;
&lt;p&gt;並簡單展示了列應字串的基礎程式&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# -*- coding: utf-8 -*-
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from Ui_test import Ui_MainWindow

class MainWindow(QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent)
        self.setupUi(self)

    @pyqtSlot()
    def on_AButton_clicked(self):
        print("Hello world!")

if __name__=='__main__':
    import sys
    app = QApplication(sys.argv)
    run = MainWindow()
    run.show()
    sys.exit(app.exec_())

&lt;/pre&gt;

&lt;p&gt;所有程式基礎最愛用字眼"Hello World"&lt;/p&gt;
&lt;p&gt;學長出了一個計算機的功課&lt;/p&gt;
&lt;p&gt;不過只要求我寫出有加法的即可&lt;/p&gt;
&lt;p&gt;但由於不熟悉&lt;/p&gt;
&lt;p&gt;只寫出部分功能&lt;/p&gt;
&lt;pre class="brush: python"&gt;

# -*- coding: utf-8 -*-
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from Ui_cal import Ui_MainWindow


class MainWindow(QMainWindow, Ui_MainWindow): 
    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent)
        self.setupUi(self)
        self.floatMod = False

    @pyqtSlot()
    def on_one_clicked(self): self.add_num(1)
    @pyqtSlot()
    def on_seven_clicked(self): self.add_num(7)
    @pyqtSlot()
    def on_three_clicked(self): self.add_num(3)
    @pyqtSlot()
    def on_four_clicked(self): self.add_num(4)
    @pyqtSlot()
    def on_nine_clicked(self): self.add_num(9)
    @pyqtSlot()
    def on_six_clicked(self): self.add_num(6)
    @pyqtSlot()
    def on_five_clicked(self): self.add_num(5)
    @pyqtSlot()
    def on_two_clicked(self): self.add_num(2)
    @pyqtSlot()
    def on_eight_clicked(self): self.add_num(8)
    @pyqtSlot()
    def on_zero_clicked(self): self.add_num(0)

    def add_num(self, x):
        val = self.lcd.value()
        if val==0:
            self.lcd.display(x)
        elif self.floatMod:
            float_len = len(str(val).split('.')[-1])
            self.lcd.display(val+x*10**-float_len)
        else:
            self.lcd.display(val*10+x)

    @pyqtSlot()
    def on_plus_clicked(self):
        """
        Slot documentation goes here.
        """
        # TODO: not implemented yet
        raise NotImplementedError

    @pyqtSlot()
    def on_equal_clicked(self):
        """
        Slot documentation goes here.
        """
        # TODO: not implemented yet
        raise NotImplementedError

    @pyqtSlot()
    def on_dot_clicked(self):
        if self.floatMod==False:
            self.floatMod = True

if __name__=='__main__':
    import sys
    app = QApplication(sys.argv)
    run = MainWindow()
    run.show()
    sys.exit(app.exec_())

&lt;/pre&gt;

&lt;p&gt;最大重要問題&lt;/p&gt;
&lt;p&gt;小數點(del)屬Python的語言&lt;/p&gt;
&lt;p&gt;故不能取del為名稱&lt;/p&gt;
&lt;p&gt;程式圖樣&lt;/p&gt;
&lt;p&gt;&lt;a href="http://imgur.com/4TrCFzp"&gt;&lt;img src="http://i.imgur.com/4TrCFzp.png" title="source: imgur.com" /&gt;&lt;/a&gt;&lt;/p&gt;</summary><category term="暑期學習"></category></entry><entry><title>Python basic and install eric6</title><link href="./python-basic-and-install-eric6.html" rel="alternate"></link><published>2017-07-21T09:00:00+08:00</published><updated>2017-07-21T09:00:00+08:00</updated><author><name>40423152</name></author><id>tag:,2017-07-21:./python-basic-and-install-eric6.html</id><summary type="html">&lt;p&gt;暑假期間對於 python 最基礎的認識以及安裝編輯器&lt;/p&gt;


&lt;p&gt;今日安裝好&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt;3.6.2、Qt、PyQt以及Eric6 並請教學長關於Python的基礎。&lt;/p&gt;
&lt;p&gt;今日的測試歷程&lt;/p&gt;
&lt;p&gt;錄製好的影片可以搭配紙本教學來複習&lt;/p&gt;
&lt;p&gt;&lt;a href="http://imgur.com/3rNThMi"&gt;&lt;img src="http://i.imgur.com/3rNThMi.jpg" title="source: imgur.com" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/226420771" width="640" height="985" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/226420771"&gt;錄製_2017_07_21_15_41_35_686.mp4&lt;/a&gt; from &lt;a href="https://vimeo.com/user46451216"&gt;Willy Lai&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="暑期學習"></category></entry><entry><title>轉換基準的 Pull Requests</title><link href="./zhuan-huan-ji-zhun-de-pull-requests.html" rel="alternate"></link><published>2016-12-16T09:00:00+08:00</published><updated>2016-12-16T09:00:00+08:00</updated><author><name>scrum1</name></author><id>tag:,2016-12-16:./zhuan-huan-ji-zhun-de-pull-requests.html</id><summary type="html">&lt;p&gt;在 &lt;a href="yi-pull-requests-can-yu-wang-zhi-bian-ji.html"&gt;"以 Pull Requests 參與網誌編輯"&lt;/a&gt;文章中, scrum-1 學員已經成功利用 pull requests 機制參與機械設計專題網誌的編寫.&lt;/p&gt;


&lt;p&gt;此一利用 pull requests 參與倉儲改版的流程為:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;登入 scrum-1 帳號, fork project_site 倉儲&lt;/li&gt;
&lt;li&gt;git clone scrum-1 帳號下的 project_site 倉儲至近端&lt;/li&gt;
&lt;li&gt;在近端以 git checkout gh-pages, 將工作目錄指向 gh-pages 分支&lt;/li&gt;
&lt;li&gt;在近端的 project_site 倉儲中進行改版後, 新增提交並推送至 github&lt;/li&gt;
&lt;li&gt;在 github 平台上送出 pull requests&lt;/li&gt;
&lt;li&gt;project_site 倉儲管理者設法合併 scrum-1 送出的 pull requests&lt;/li&gt;
&lt;li&gt;scrum-1 所增加的網誌內容將可呈現在機械設計專題網頁上&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;接下來當原始的 project_site 倉儲持續改版後, 位於 scrum-1 帳號下的 project_site 倉儲將會與原始的倉儲產生差異, 假如 scrum-1 希望先前所 fork 下來的 project_site 倉儲更新到原始倉儲的最新版本, 就是使用"轉換基準 Pull Requests"(switching base Pull Requests)的時機.&lt;/p&gt;
&lt;p&gt;建立"轉換基準 Pull Requests", 是由 scrum-1 帳號提出, 基本流程與前述提出改版 Pull Requests 要求類似, 唯一的差別就是"改版基準"的互換, 以遠端的原始倉儲 gh-pages 分支為新版, "要求"將原始倉儲的版本合併至 scrum-1 帳號下的 project_site 倉儲.&lt;/p&gt;
&lt;p&gt;由於此一轉換基準的改版倉儲位於 scrum-1 帳號下, 因此 scrum-1 具有合併此一自我提出要求的權限, 如下圖所示, 在沒有衝突的情況下, 可以直接在線上完成合併.&lt;/p&gt;
&lt;p&gt;scrum-1 用戶可以利用"switching base"連結, 要求建立"轉換基準"的 Pull Requests:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://coursemdetw.github.io/project_site_files/files/4042/scrum1/scrum-1_gh-pages_switching_base.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;根據下圖, 轉換基準的合併要求可以直接在線上進行, 不會產生衝突:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://coursemdetw.github.io/project_site_files/files/4042/scrum1/scrum-1_gh-pages_switching_base-2.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;最後, 如下圖所示, scrum-1 具有同意此一"轉換基準版本合併請求"的權限:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://coursemdetw.github.io/project_site_files/files/4042/scrum1/scrum-1_gh-pages_switching_base-3.png" width="600" /&gt;&lt;/p&gt;</summary><category term="4042g1"></category><category term="Leo Editor"></category><category term="樣板"></category></entry><entry><title>以 Pull Requests 參與網誌編輯</title><link href="./yi-pull-requests-can-yu-wang-zhi-bian-ji.html" rel="alternate"></link><published>2016-12-15T09:00:00+08:00</published><updated>2016-12-15T09:00:00+08:00</updated><author><name>scrum1</name></author><id>tag:,2016-12-15:./yi-pull-requests-can-yu-wang-zhi-bian-ji.html</id><summary type="html">&lt;p&gt;&lt;a href="https://help.github.com/articles/about-pull-requests/"&gt;Pull Requests&lt;/a&gt; 是一種間接 git 倉儲改版的模式. 在此展示如何利用 github 的拉回請求, 以及 Leo Editor 專案檔案的建立, 對機械設計專題網誌新增文章.&lt;/p&gt;


&lt;h3&gt;Fork 倉儲&lt;/h3&gt;
&lt;p&gt;希望使用 Github 的 Pull Requests 功能, 必須在 github 系統中, 先登記用戶帳號, 啟用帳號後登入, 然後以瀏覽器連線到希望 Pull Requests 的倉儲網址, 利用 fork 功能, 將該倉儲"互刻"(所謂互刻, 就是一種互相具有連結關係的倉儲複刻) 到所登錄的 github 帳號下.&lt;/p&gt;
&lt;p&gt;接下來則建議對於該 forked (互刻) 的倉儲, 儘量 git clone 到近端改版之外, 並且每間隔一段時間, 利用 github 所提供的"反向 pull requests", 保持與原始倉儲版本的同步, 避免因版本差異過大的情況下, 提出 Pull Requests, 而提高合併衝突的困難度.&lt;/p&gt;
&lt;p&gt;如前所述, 這篇網誌是由 github 帳號 scrum-1 所建立, 截至目前, scrum-1 用戶已經完成 fork project_site 倉儲的動作, 而且以 git clone 將機械設計專題複製到近端改版. 而改版前的第一要務就是確認近端倉儲所在的分支.&lt;/p&gt;
&lt;h3&gt;切換分支&lt;/h3&gt;
&lt;p&gt;因 project_site 在 github 上的 default branch 為 master, 因此 git clone 到近端之後, 必須利用 git checkout gh-pages 切換到 gh-pages 分之後, 才能在正確的工作目錄中進行改版, 之後提交推送, 也必須注意, 一定要指定 gh-pages 分支, 才能正確對 github pages 網誌內容改版.&lt;/p&gt;
&lt;p&gt;其次, 因為 scrum-1 用戶代表 2017 年學號以 4042 開頭的學員, 因此先在 clone 下來的倉儲中, 利用 git checkout gh-pages 將工作目錄轉到 gh-pages 分之後, 新增 users/4042 與 content/4042 目錄, 並將其個人用戶所屬的 .leo 檔案存為 users/4042/scrum1.leo, 並且利用 Leo Editor 的節點指令 @path 與 @edit, 將個人所屬的 .md 檔案, 存在 content/4042 目錄中, 例如: 目前這篇網誌的 .md 檔案為 content/4042/scrum1_20161215.md&lt;/p&gt;
&lt;p&gt;因為同屬 4042 專題學員的 .md 檔案都規劃存在 content/4042 目錄中, 因此要求各用戶將各自所寫的 .md 檔案名稱中冠上 github 帳號, 除了避免彼此覆蓋內容外, 也可以明確找出不同用戶所寫的網誌 .md 檔案.&lt;/p&gt;
&lt;h3&gt;圖檔管理&lt;/h3&gt;
&lt;p&gt;在 Pelican 網誌系統中管理文章中所引用的圖檔, 是一項大工程, 假如文章內容與所引用的圖檔都要全部納入分散式版本管理的架構, 方法之一是將專門存放圖檔的 project_site_files 倉儲 gh-page 分支設為 project_site gh-pages 分支的子模組, 然後兩個倉儲分別改版 (也就是不要在 project_site 的改版過程中企圖修改 project_site_files 子模組對應目錄下的檔案). 但是在兩個倉儲利用 pull requests 或者 git submodule update 的過程並非同步時, 近端無法即時看到納入 project_site_files 倉儲中的圖檔.&lt;/p&gt;
&lt;p&gt;另外一個比較建議採用的方式則是兩個倉儲分開維護, 若參與協同的學員擁有 project_site_files 倉儲的管理權限 ,就必須先將近端引用的圖檔先推送到 project_site_files 的 gh-pages 分支, 然後在 .md 文章中, 直接引用圖檔的絕對目錄, 例如下圖:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://coursemdetw.github.io/project_site_files/files/4042/scrum1/scrum1_20161215-1.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;以下的三個圖檔, 也是先放到 scrum-1 近端的 project_site_files gh-pages 分支工作目錄中之後 ,以&lt;/p&gt;
&lt;p&gt;git add -A&lt;/p&gt;
&lt;p&gt;git commit -m "add scrum1 20161215 picture files"&lt;/p&gt;
&lt;p&gt;git push origin gh-pages&lt;/p&gt;
&lt;p&gt;提交推送到 scrum-1 帳號所屬的 project_site_files 倉儲之後, 再建立 pull requests, 然後由 project_site_files 倉儲的管理者接受後合併版本 ,就可以直接以圖檔案的絕對 URL 引用如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://coursemdetw.github.io/project_site_files/files/4042/scrum1/scrum1_20161215-2.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://coursemdetw.github.io/project_site_files/files/4042/scrum1/scrum1_20161215-3.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://coursemdetw.github.io/project_site_files/files/4042/scrum1/scrum1_20161215-4.png" width="600" /&gt;&lt;/p&gt;
&lt;h3&gt;網誌提交推送&lt;/h3&gt;
&lt;p&gt;一旦 scrum-1 學員完成 .md 的文章原始檔案編輯, 且透過近端 local-pelican 按鈕轉為 pelican 網誌 html 系統之後, 可以利用支援 IPv4 的 https-server 按鈕或支援 IPv6 的 ipv6-https-server 按鈕, 在近端以 https 檢視網誌後, 直接提交推送到 scrum-1 的 project_site 倉儲後進行 pull requests, 由於拉回請求的過程, 管理者除了必須納入 scrum-1 所新增的 .md 檔案外, 其餘都必須先在近端用 local-pelican 按鈕轉檔檢驗, 因此 scrum-1 無需在 pull requests 的流程中提交 gh-pages-pelican 按鈕所產生的遠端格式版本(多了 disqus 留言系統), 可以直接提交近端版本即可.&lt;/p&gt;
&lt;p&gt;但是負責審核 pull requests 的管理學員, 除了在近端檢查機械設計專題的網誌改版內容之外, 必須記得在提交推送到 project_site 倉儲 gh-pages 分支之前, 利用 gh-pages-pelican 按鈕, 將 .md 檔案轉為遠端網誌格式, 否則 disqus 留言系統將無法正確呈現.&lt;/p&gt;
&lt;p&gt;最後, scrum-1 學員一旦完成互刻 project_site 倉儲 gh-pages 分支的提交推送後, 即可針對 gh-pages 分支, 新增 pull requests, 接下來就是 project_site 倉儲管理端審核請求, 以及納入改版內容的流程.&lt;/p&gt;</summary><category term="4042g1"></category><category term="Leo Editor"></category><category term="樣板"></category></entry></feed>